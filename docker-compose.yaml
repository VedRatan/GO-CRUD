version: '3'

services:
  reverse-proxy:
    image: nginx:latest
    container_name: reverse_proxy
    depends_on:
        - app
    volumes:
      - ./allconf/:/etc/nginx/conf.d/
    ports:
      - 80:80

# api container
  app:
    image: lusciousmaestro/api_image:9.0
    ports:
      - "5000:5000"
    container_name: ci-cd_app_1
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3

# database container
  mongo:
    image: mongo
    # ports:
    #   - "27017:27017"
    container_name: mongo_db
    volumes:
      - mydata:/data/db
    restart: always

# volumes:
#   mydata:
#   jenkinsData:
#   grafana:
#   prometheus: 



# node-exporter container
  # node-exporter:
  #   image: prom/node-exporter:v1.2.2
  #   container_name: node-exporter
  #   network_mode: host
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'

  # prometheus container
  # prometheus:
  #   image: prom/prometheus:v2.33.1
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus:/prometheus
      
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus' 
  #     - '--web.console.libraries=/etc/prometheus/console_libraries' 
  #     - '--web.console.templates=/etc/prometheus/consoles' 
  #     - '--web.enable-lifecycle'

  # grafana:
  #   image: grafana/grafana:latest
  #   user: root
  #   container_name: grafana
  #   ports:
  #     - 3000:3000
  #   restart: unless-stopped
  #   volumes:
  #     - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
  #     - grafana:/var/lib/grafana


  # cadvisor:
  #     image: gcr.io/cadvisor/cadvisor:v0.37.0
  #     container_name: cadvisor
  #     privileged: true
  #     ports:
  #     - 8080:8080
  #     volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     depends_on:
  #     - redis
  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #   - 6379:6379
  
  # ci/cd pipeline

  jenkins:
    build: ./jenkins/
    ports:
      - "8000:8080"
      - "50000:50000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkinsData:/var/jenkins_home
    

volumes:
  mydata:
  jenkinsData:
#   grafana:
#   prometheus: 